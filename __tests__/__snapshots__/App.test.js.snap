// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component should match the ActionCardItemSkeleton snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "marginTop": "",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 8,
          "marginLeft": 8,
          "marginRight": 8,
          "marginTop": 8,
        },
      ]
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="search images"
      style={
        Array [
          Object {
            "borderColor": "#E5E5E5",
            "borderStyle": "solid",
            "borderWidth": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": "NaNpx",
          },
        ]
      }
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="searchBtn"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          disabled={false}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "justifyContent": "space-between",
          "marginBottom": 8,
          "marginLeft": 8,
          "marginRight": 8,
          "marginTop": 8,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 18,
            "fontWeight": "bold",
          },
        ]
      }
    >
      History
    </Text>
    <RCTScrollView
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View />
    </RCTScrollView>
  </View>
  <RCTScrollView
    ListFooterComponent={[Function]}
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
      />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
